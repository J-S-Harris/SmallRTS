package screensEtc;

import java.util.ArrayList;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.utils.ScreenUtils;

import utilityClasses.MenuScreenTextManager;

public class MenuScreen implements Screen {

	GameScreen gameScreen;
	Game game;
	SpriteBatch batch;
	BitmapFont font;

	int lInsetX;
	int rInsetX;

	MenuScreenTextManager textManager;
	ArrayList<String> leftText;
	ArrayList<String> rightText;

	int width;
	int height;

	int highScore;

	public MenuScreen(Game game, int highScore, int width, int height) {
		this.gameScreen = new GameScreen(this);
		this.game = game;
		this.batch = new SpriteBatch();
		this.font = new BitmapFont();

		lInsetX = gameScreen.getBackground().getWidth() / 20;
		rInsetX = gameScreen.getBackground().getWidth() / 2;

		textManager = new MenuScreenTextManager(this);
		leftText = textManager.getLeftText();
		rightText = textManager.getRightText();

		this.width = width;
		this.height = height;

		this.highScore = highScore;


	}

	@Override
	public void show() {
		gameScreen = new GameScreen(this);

	}

	@Override
	public void render(float delta) {

		ScreenUtils.clear(0, 0, 0, 1);
		checkForStartInput();

		processBatch();

	}

	private void processBatch() {
		batch.begin();

		MenuScreenTextManager.renderText();

		batch.end();

	}



	private void renderText() {
		int count = 0;
		while (count < leftText.size()) {
			font.draw(batch, leftText.get(count), lInsetX, gameScreen.getBackground().getHeight() - (50 * count) + 30);
			count++;
		}
		count = 0;
		while (count < rightText.size()) {
			font.draw(batch, rightText.get(count), rInsetX, gameScreen.getBackground().getHeight() - (50 * count) + 30);
			count++;
		}

	}

	private void checkForStartInput() {

		if (Gdx.input.isKeyJustPressed(Input.Keys.SPACE)) {
			game.setScreen(gameScreen);
		}

	}

	@Override
	public void resize(int width, int height) {
		// TODO Auto-generated method stub

	}

	@Override
	public void pause() {
		// TODO Auto-generated method stub

	}

	@Override
	public void resume() {
		// TODO Auto-generated method stub

	}

	@Override
	public void hide() {
		// TODO Auto-generated method stub

	}

	@Override
	public void dispose() {
		// TODO Auto-generated method stub

	}

	public Game getGame() {
		return game;
	}

	public void setGame(Game game) {
		this.game = game;
	}

	public int getHighScore() {
		return highScore;
	}

	public void setHighScore(int highScore) {
		this.highScore = highScore;
	}

	public SpriteBatch getBatch() {
		return batch;
	}

	public void setBatch(SpriteBatch batch) {
		this.batch = batch;
	}

	public BitmapFont getFont() {
		return font;
	}

	public void setFont(BitmapFont font) {
		this.font = font;
	}

	public int getlInsetX() {
		return lInsetX;
	}

	public void setlInsetX(int lInsetX) {
		this.lInsetX = lInsetX;
	}

	public int getrInsetX() {
		return rInsetX;
	}

	public void setrInsetX(int rInsetX) {
		this.rInsetX = rInsetX;
	}

	public GameScreen getGameScreen() {
		return gameScreen;
	}

	public void setGameScreen(GameScreen gameScreen) {
		this.gameScreen = gameScreen;
	}
	
	
	

}
